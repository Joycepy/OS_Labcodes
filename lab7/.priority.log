c[?7l[2J[0mSeaBIOS (version rel-1.12.1-0-ga5cab58e9a3f-prebuilt.qemu.org)


iPXE (http://ipxe.org) 00:03.0 C980 PCI2.10 PnP PMM+07F91410+07EF1410 C980
Press Ctrl-B to configure iPXE (PCI 00:03.0)...                                                                               


Booting from Hard Disk..(THU.CST) os is loading ...

Special kernel symbols:
  entry  0xc0100036 (phys)
  etext  0xc010ec90 (phys)
  edata  0xc01c7000 (phys)
  end    0xc01ca2a4 (phys)
Kernel executable memory footprint: 809KB
ebp:0xc0133f38 eip:0xc0102040 args:0x00010094 0x00000000 0xc0133f68 0xc01000e4 
    kern/debug/kdebug.c:350: print_stackframe+21
ebp:0xc0133f48 eip:0xc010232f args:0x00000000 0x00000000 0x00000000 0xc0133fb8 
    kern/debug/kmonitor.c:129: mon_backtrace+10
ebp:0xc0133f68 eip:0xc01000e4 args:0x00000000 0xc0133f90 0xffff0000 0xc0133f94 
    kern/init/init.c:58: grade_backtrace2+33
ebp:0xc0133f88 eip:0xc010010d args:0x00000000 0xffff0000 0xc0133fb4 0x0000002a 
    kern/init/init.c:63: grade_backtrace1+38
ebp:0xc0133fa8 eip:0xc010012b args:0x00000000 0xc0100036 0xffff0000 0x0000001d 
    kern/init/init.c:68: grade_backtrace0+23
ebp:0xc0133fc8 eip:0xc0100150 args:0xc010ecbc 0xc010eca0 0x000032a4 0x00000000 
    kern/init/init.c:73: grade_backtrace+34
ebp:0xc0133ff8 eip:0xc010008b args:0xc010f0f8 0xc010f100 0xc01022b5 0xc010f11f 
    kern/init/init.c:32: kern_init+84
memory management: default_pmm_manager
e820map:
  memory: 0009fc00, [00000000, 0009fbff], type = 1.
  memory: 00000400, [0009fc00, 0009ffff], type = 2.
  memory: 00010000, [000f0000, 000fffff], type = 2.
  memory: 07ee0000, [00100000, 07fdffff], type = 1.
  memory: 00020000, [07fe0000, 07ffffff], type = 2.
  memory: 00040000, [fffc0000, ffffffff], type = 2.
check_alloc_page() succeeded!
check_pgdir() succeeded!
check_boot_pgdir() succeeded!
-------------------- BEGIN --------------------
PDE(0e0) c0000000-f8000000 38000000 urw
  |-- PTE(38000) c0000000-f8000000 38000000 -rw
PDE(001) fac00000-fb000000 00400000 -rw
  |-- PTE(000e0) faf00000-fafe0000 000e0000 urw
  |-- PTE(00001) fafeb000-fafec000 00001000 -rw
--------------------- END ---------------------
use SLOB allocator
check_slab() succeeded!
kmalloc_init() succeeded!
check_vma_struct() succeeded!
check_pgfault() succeeded!
check_vmm() succeeded.
sched class: stride_scheduler
ide 0:      10000(sectors), 'QEMU HARDDISK'.
ide 1:     262144(sectors), 'QEMU HARDDISK'.
SWAP: manager = fifo swap manager
BEGIN check_swap: count 2, total 31764
setup Page Table for vaddr 0X1000, so alloc a page
setup Page Table vaddr 0~4MB OVER!
set up init env for check_swap begin!
page fault at 0x00001000: K/W [no page found].
page fault at 0x00002000: K/W [no page found].
page fault at 0x00003000: K/W [no page found].
page fault at 0x00004000: K/W [no page found].
set up init env for check_swap over!
write Virt Page c in fifo_check_swap
write Virt Page a in fifo_check_swap
write Virt Page d in fifo_check_swap
write Virt Page b in fifo_check_swap
write Virt Page e in fifo_check_swap
page fault at 0x00005000: K/W [no page found].
swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
write Virt Page b in fifo_check_swap
write Virt Page a in fifo_check_swap
page fault at 0x00001000: K/W [no page found].
do pgfault: ptep c0000004, pte 200
swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
write Virt Page b in fifo_check_swap
page fault at 0x00002000: K/W [no page found].
do pgfault: ptep c0000008, pte 300
swap_out: i 0, store page in vaddr 0x3000 to disk swap entry 4
swap_in: load disk swap entry 3 with swap_page in vadr 0x2000
write Virt Page c in fifo_check_swap
page fault at 0x00003000: K/W [no page found].
do pgfault: ptep c000000c, pte 400
swap_out: i 0, store page in vaddr 0x4000 to disk swap entry 5
swap_in: load disk swap entry 4 with swap_page in vadr 0x3000
write Virt Page d in fifo_check_swap
page fault at 0x00004000: K/W [no page found].
do pgfault: ptep c0000010, pte 500
swap_out: i 0, store page in vaddr 0x5000 to disk swap entry 6
swap_in: load disk swap entry 5 with swap_page in vadr 0x4000
write Virt Page e in fifo_check_swap
page fault at 0x00005000: K/W [no page found].
do pgfault: ptep c0000014, pte 600
swap_out: i 0, store page in vaddr 0x1000 to disk swap entry 2
swap_in: load disk swap entry 6 with swap_page in vadr 0x5000
write Virt Page a in fifo_check_swap
page fault at 0x00001000: K/R [no page found].
do pgfault: ptep c0000004, pte 200
swap_out: i 0, store page in vaddr 0x2000 to disk swap entry 3
swap_in: load disk swap entry 2 with swap_page in vadr 0x1000
count is 1, total is 5
check_swap() succeeded!
++ setup timer interrupts
I am No.4 philosopher_condvar
Iter 1, No.4 philosopher_condvar is thinking
I am No.3 philosopher_condvar
Iter 1, No.3 philosopher_condvar is thinking
I am No.2 philosopher_condvar
Iter 1, No.2 philosopher_condvar is thinking
I am No.1 philosopher_condvar
Iter 1, No.1 philosopher_condvar is thinking
I am No.0 philosopher_condvar
Iter 1, No.0 philosopher_condvar is thinking
I am No.4 philosopher_sema
Iter 1, No.4 philosopher_sema is thinking
I am No.3 philosopher_sema
Iter 1, No.3 philosopher_sema is thinking
I am No.2 philosopher_sema
Iter 1, No.2 philosopher_sema is thinking
I am No.1 philosopher_sema
Iter 1, No.1 philosopher_sema is thinking
I am No.0 philosopher_sema
Iter 1, No.0 philosopher_sema is thinking
kernel_execve: pid = 2, name = "priority".
priority process will sleep 400 ticks
Iter 1, No.2 philosopher_sema is eating
Iter 1, No.4 philosopher_sema is eating
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c03ca688, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03ca688, cvp->count 0, cvp->owner->next_count 0
Iter 1, No.0 philosopher_condvar is eating
phi_take_forks_condvar: 1 didn't get fork and will wait
cond_wait begin:  cvp c03ca69c, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c03ca6b0, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03ca6b0, cvp->count 0, cvp->owner->next_count 0
Iter 1, No.2 philosopher_condvar is eating
phi_take_forks_condvar: 3 didn't get fork and will wait
cond_wait begin:  cvp c03ca6c4, cvp->count 0, cvp->owner->next_count 0
phi_take_forks_condvar: 4 didn't get fork and will wait
cond_wait begin:  cvp c03ca6d8, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[3] will eating
phi_test_condvar: signal self_cv[3] 
cond_signal begin: cvp c03ca6c4, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03ca6c4, cvp->count 0, cvp->owner->next_count 1
Iter 1, No.3 philosopher_condvar is eating
Iter 2, No.4 philosopher_sema is thinking
Iter 1, No.0 philosopher_sema is eating
Iter 2, No.2 philosopher_sema is thinking
Iter 1, No.3 philosopher_sema is eating
cond_signal end: cvp c03ca6c4, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.2 philosopher_condvar is thinking
phi_test_condvar: state_condvar[1] will eating
phi_test_condvar: signal self_cv[1] 
cond_signal begin: cvp c03ca69c, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03ca69c, cvp->count 0, cvp->owner->next_count 1
Iter 1, No.1 philosopher_condvar is eating
cond_signal end: cvp c03ca69c, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.0 philosopher_condvar is thinking
phi_take_forks_condvar: 0 didn't get fork and will wait
cond_wait begin:  cvp c03ca688, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c03ca688, cvp->count 1, cvp->owner->next_count 0
Iter 2, No.3 philosopher_sema is thinking
Iter 2, No.2 philosopher_sema is eating
Iter 2, No.0 philosopher_sema is thinking
Iter 2, No.4 philosopher_sema is eating
cond_wait end:  cvp c03ca688, cvp->count 0, cvp->owner->next_count 1
Iter 2, No.0 philosopher_condvar is eating
cond_signal end: cvp c03ca688, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.1 philosopher_condvar is thinking
Iter 2, No.3 philosopher_condvar is thinking
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c03ca6b0, cvp->count 0, cvp->owner->next_count 0
cond_signal end: cvp c03ca6b0, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.2 philosopher_condvar is eating
Iter 3, No.4 philosopher_sema is thinking
Iter 2, No.0 philosopher_sema is eating
Iter 3, No.2 philosopher_sema is thinking
Iter 2, No.3 philosopher_sema is eating
phi_test_condvar: state_condvar[4] will eating
phi_test_condvar: signal self_cv[4] 
cond_signal begin: cvp c03ca6d8, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03ca6d8, cvp->count 0, cvp->owner->next_count 1
Iter 1, No.4 philosopher_condvar is eating
cond_signal end: cvp c03ca6d8, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.0 philosopher_condvar is thinking
phi_take_forks_condvar: 1 didn't get fork and will wait
cond_wait begin:  cvp c03ca69c, cvp->count 0, cvp->owner->next_count 0
phi_take_forks_condvar: 3 didn't get fork and will wait
cond_wait begin:  cvp c03ca6c4, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[1] will eating
phi_test_condvar: signal self_cv[1] 
cond_signal begin: cvp c03ca69c, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03ca69c, cvp->count 0, cvp->owner->next_count 1
Iter 2, No.1 philosopher_condvar is eating
cond_signal end: cvp c03ca69c, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.2 philosopher_condvar is thinking
phi_take_forks_condvar: 0 didn't get fork and will wait
cond_wait begin:  cvp c03ca688, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.3 philosopher_sema is thinking
Iter 3, No.2 philosopher_sema is eating
Iter 3, No.0 philosopher_sema is thinking
Iter 3, No.4 philosopher_sema is eating
phi_test_condvar: state_condvar[3] will eating
phi_test_condvar: signal self_cv[3] 
cond_signal begin: cvp c03ca6c4, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03ca6c4, cvp->count 0, cvp->owner->next_count 1
Iter 2, No.3 philosopher_condvar is eating
cond_signal end: cvp c03ca6c4, cvp->count 0, cvp->owner->next_count 0
Iter 2, No.4 philosopher_condvar is thinking
phi_take_forks_condvar: 2 didn't get fork and will wait
cond_wait begin:  cvp c03ca6b0, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c03ca688, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03ca688, cvp->count 0, cvp->owner->next_count 1
Iter 3, No.0 philosopher_condvar is eating
cond_signal end: cvp c03ca688, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.1 philosopher_condvar is thinking
phi_take_forks_condvar: 4 didn't get fork and will wait
cond_wait begin:  cvp c03ca6d8, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c03ca6b0, cvp->count 1, cvp->owner->next_count 0
Iter 4, No.4 philosopher_sema is thinking
Iter 3, No.0 philosopher_sema is eating
Iter 4, No.2 philosopher_sema is thinking
Iter 3, No.3 philosopher_sema is eating
cond_wait end:  cvp c03ca6b0, cvp->count 0, cvp->owner->next_count 1
Iter 3, No.2 philosopher_condvar is eating
cond_signal end: cvp c03ca6b0, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.3 philosopher_condvar is thinking
phi_take_forks_condvar: 1 didn't get fork and will wait
cond_wait begin:  cvp c03ca69c, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[4] will eating
phi_test_condvar: signal self_cv[4] 
cond_signal begin: cvp c03ca6d8, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03ca6d8, cvp->count 0, cvp->owner->next_count 1
Iter 2, No.4 philosopher_condvar is eating
cond_signal end: cvp c03ca6d8, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.0 philosopher_condvar is thinking
Iter 4, No.3 philosopher_sema is thinking
Iter 4, No.2 philosopher_sema is eating
Iter 4, No.0 philosopher_sema is thinking
Iter 4, No.4 philosopher_sema is eating
phi_take_forks_condvar: 3 didn't get fork and will wait
cond_wait begin:  cvp c03ca6c4, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[1] will eating
phi_test_condvar: signal self_cv[1] 
cond_signal begin: cvp c03ca69c, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03ca69c, cvp->count 0, cvp->owner->next_count 1
Iter 3, No.1 philosopher_condvar is eating
cond_signal end: cvp c03ca69c, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.2 philosopher_condvar is thinking
phi_take_forks_condvar: 0 didn't get fork and will wait
cond_wait begin:  cvp c03ca688, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[3] will eating
phi_test_condvar: signal self_cv[3] 
cond_signal begin: cvp c03ca6c4, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03ca6c4, cvp->count 0, cvp->owner->next_count 1
Iter 3, No.3 philosopher_condvar is eating
cond_signal end: cvp c03ca6c4, cvp->count 0, cvp->owner->next_count 0
Iter 3, No.4 philosopher_condvar is thinking
phi_take_forks_condvar: 2 didn't get fork and will wait
cond_wait begin:  cvp c03ca6b0, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[0] will eating
phi_test_condvar: signal self_cv[0] 
cond_signal begin: cvp c03ca688, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03ca688, cvp->count 0, cvp->owner->next_count 1
Iter 4, No.0 philosopher_condvar is eating
No.4 philosopher_sema quit
Iter 4, No.0 philosopher_sema is eating
No.2 philosopher_sema quit
Iter 4, No.3 philosopher_sema is eating
cond_signal end: cvp c03ca688, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.1 philosopher_condvar is thinking
phi_take_forks_condvar: 4 didn't get fork and will wait
cond_wait begin:  cvp c03ca6d8, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[2] will eating
phi_test_condvar: signal self_cv[2] 
cond_signal begin: cvp c03ca6b0, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03ca6b0, cvp->count 0, cvp->owner->next_count 1
Iter 4, No.2 philosopher_condvar is eating
cond_signal end: cvp c03ca6b0, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.3 philosopher_condvar is thinking
phi_take_forks_condvar: 1 didn't get fork and will wait
cond_wait begin:  cvp c03ca69c, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[4] will eating
phi_test_condvar: signal self_cv[4] 
cond_signal begin: cvp c03ca6d8, cvp->count 1, cvp->owner->next_count 0
No.0 philosopher_sema quit
Iter 1, No.1 philosopher_sema is eating
No.3 philosopher_sema quit
cond_wait end:  cvp c03ca6d8, cvp->count 0, cvp->owner->next_count 1
Iter 3, No.4 philosopher_condvar is eating
cond_signal end: cvp c03ca6d8, cvp->count 0, cvp->owner->next_count 0
No.0 philosopher_condvar quit
phi_take_forks_condvar: 3 didn't get fork and will wait
cond_wait begin:  cvp c03ca6c4, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[1] will eating
phi_test_condvar: signal self_cv[1] 
cond_signal begin: cvp c03ca69c, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03ca69c, cvp->count 0, cvp->owner->next_count 1
Iter 4, No.1 philosopher_condvar is eating
cond_signal end: cvp c03ca69c, cvp->count 0, cvp->owner->next_count 0
No.2 philosopher_condvar quit
phi_test_condvar: state_condvar[3] will eating
phi_test_condvar: signal self_cv[3] 
cond_signal begin: cvp c03ca6c4, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03ca6c4, cvp->count 0, cvp->owner->next_count 1
Iter 4, No.3 philosopher_condvar is eating
Iter 2, No.1 philosopher_sema is thinking
cond_signal end: cvp c03ca6c4, cvp->count 0, cvp->owner->next_count 0
Iter 4, No.4 philosopher_condvar is thinking
No.1 philosopher_condvar quit
phi_take_forks_condvar: 4 didn't get fork and will wait
cond_wait begin:  cvp c03ca6d8, cvp->count 0, cvp->owner->next_count 0
phi_test_condvar: state_condvar[4] will eating
phi_test_condvar: signal self_cv[4] 
cond_signal begin: cvp c03ca6d8, cvp->count 1, cvp->owner->next_count 0
cond_wait end:  cvp c03ca6d8, cvp->count 0, cvp->owner->next_count 1
Iter 4, No.4 philosopher_condvar is eating
Iter 2, No.1 philosopher_sema is eating
cond_signal end: cvp c03ca6d8, cvp->count 0, cvp->owner->next_count 0
No.3 philosopher_condvar quit
No.4 philosopher_condvar quit
Iter 3, No.1 philosopher_sema is thinking
Iter 3, No.1 philosopher_sema is eating
Iter 4, No.1 philosopher_sema is thinking
Iter 4, No.1 philosopher_sema is eating
No.1 philosopher_sema quit
main: fork ok,now need to wait pids.
child pid 17, acc 2328000, time 1401
child pid 16, acc 1840000, time 1401
child pid 15, acc 1424000, time 1402
child pid 14, acc 924000, time 1402
child pid 13, acc 480000, time 1403
main: pid 13, acc 480000, time 1403
main: pid 14, acc 924000, time 1403
main: pid 15, acc 1424000, time 1403
main: pid 16, acc 1840000, time 1403
main: pid 17, acc 2328000, time 1403
main: wait pids over
stride sched correct result: 1 2 3 4 5
all user-mode processes have quit.
init check memory pass.
kernel panic at kern/process/proc.c:474:
    initproc exit.

stack trackback:
ebp:0xc03ccf88 eip:0xc0102040 args:0xc010efc1 0xc03ccfcc 0x000001da 0xc03ccfb8 
    kern/debug/kdebug.c:350: print_stackframe+21
ebp:0xc03ccfb8 eip:0xc01018f2 args:0xc01114a4 0x000001da 0xc01114f6 0x00000000 
    kern/debug/panic.c:27: __panic+105
ebp:0xc03ccfe8 eip:0xc010c4f3 args:0x00000000 0x00000000 0x00000000 0x00000010 
    kern/process/proc.c:474: do_exit+91
Welcome to the kernel debug monitor!!
Type 'help' for a list of commands.
K> 